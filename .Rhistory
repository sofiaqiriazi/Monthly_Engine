header <- deps.long[0,odd_indexes]
headin <- names(header)
depmonth <- aggregate(cbind(Awdal,Bakool,Banadir,Bari,Bay,Galgaduud,Gedo,Hiiraan,
Jubbada_Dhexe,Jubbada_Hoose,Mudug,Nugaal,Sanaag,
Shabeallaha_Dhexe,Shabeellaha_Hoose,Sool,Togdheer,
Woqooyi_Galbeed,Azerbaijan,DJI, Djibouti, ETH,
Ethiopia, Ethiopia.general, KEN,Kenya.general)~(month(Date)+year(Date)),
data=deps.long,FUN=sum)
monthsintotal <- nrow(depmonth)
monthdate<- rep(NA,monthsintotal)
for (t in 1:monthsintotal){
m <- as.character(depmonth[t,1])
y<- substr(as.character(depmonth[t,2]),3,4)
if(nchar(m)==1){
m <- paste("0",as.character(depmonth[t,1]),sep="")
}
monthdate[t] <- paste(m,"/",y,sep="")
}
Date <-as.yearmon(monthdate,format = "%m/%y")
depmonth <-cbind(Date,depmonth[,3:length(depmonth)])
write.csv(as.data.frame(depmonth[1:length(depmonth)]), file ="DeparturesperMonth.csv",row.names = FALSE)
#This section marks the aggregation per month of the Conflicts table in Jetson file
#output of this file goes to ConflictsperMonth.csv
odd_indexes<-seq(4,40,2)
header <- acled.long[0,odd_indexes]
headin <- names(header)
confmonth <- aggregate(cbind(Awdal,Bakool,Banadir,Bari,Bay,Galgaduud,Gedo,Hiiraan,
Jubbada_Dhexe,Jubbada_Hoose,Mudug,Nugaal,Sanaag,
Shabeellaha_Dhexe,Shabeellaha_Hoose,Sool,Togdheer,
Woqooyi_Galbeed)~(month(Date)+year(Date)),
data=acled.long,FUN=sum)
monthsintotal <- nrow(confmonth)
monthdate<- rep(NA,monthsintotal)
for (t in 1:monthsintotal){
m <- as.character(confmonth[t,1])
y<- substr(as.character(confmonth[t,2]),3,4)
if(nchar(m)==1){
m <- paste("0",as.character(confmonth[t,1]),sep="")
}
monthdate[t] <- paste(m,"/",y,sep="")
}
Date <-as.yearmon(monthdate,format = "%m/%y")
confmonth <-cbind(Date,confmonth[,3:length(confmonth)])
write.csv(as.data.frame(confmonth[1:length(confmonth)]), file ="ConflictsperMonth.csv",row.names = FALSE)
#This section marks the aggregation per month of the Rainfall file
#output of this file goes to RainfallperMonth.csv
odd_indexes<-seq(2,18,1)
header <- rain.long[0,odd_indexes]
headin <- names(header)
rain.long[is.na(rain.long)] <- 0
rainmonth <- aggregate(cbind(Awdal,Bakool,Banaadir,Bari,Bay,Gedo,Hiiraan,
Jubbada_Dhexe,Jubbada_Hoose,Mudug,Nugaal,Sanaag,
Shabeellaha_Dhexe,Shabeellaha_Hoose,Sool,Togdheer,
Woqooyi_Galbeed)~(month(Date)+year(Date)),
data=rain.long,FUN=sum)
monthsintotal <- nrow(rainmonth)
monthdate<- rep(NA,monthsintotal)
for (t in 1:monthsintotal){
m <- as.character(rainmonth[t,1])
y<- as.character(rainmonth[t,2])
if(nchar(m)==1){
m <- paste("0",as.character(rainmonth[t,1]),sep="")
}
monthdate[t] <- paste(m,"/",y,sep="")
}
Date <-as.yearmon(monthdate,format = "%m/%y")
rainmonth <-cbind(Date,rainmonth[,3:length(rainmonth)])
write.csv(as.data.frame(rainmonth[1:length(rainmonth)]), file ="RainfallperMonth.csv",row.names = FALSE)
##saving all in one excel
write.xlsx(x = as.data.frame(confmonth[1:length(confmonth)]),
file = "Jetson_perMonth.xlsx",
sheetName = "Conflict",
row.names = FALSE,
append = TRUE)
write.xlsx(x = as.data.frame(arrmonth[1:length(arrmonth)]),
file = "Jetson_perMonth.xlsx",
sheetName = "Arrivals",
row.names = FALSE,
append = TRUE)
write.xlsx(x = as.data.frame(depmonth[1:length(depmonth)]),
file = "Jetson_perMonth.xlsx",
sheetName = "Departures",
row.names = FALSE,
append = TRUE)
write.xlsx(x = as.data.frame(rainmonth[1:length(rainmonth)]),
file = "Jetson_perMonth.xlsx",
sheetName = "Rainfall",
row.names = FALSE,
append = TRUE)
library(gsheet)
library(lubridate)
library(zoo)
library(rJava)
library(xlsx)
incidents <- "https://drive.google.com/open?id=1VX3XeVXzDWWhcb36jik3k9Whq_gnELw_07L21L_QmnE"
arrivals <- "https://drive.google.com/open?id=1HoMZooolfAAlEzyFhWhxxmzcpDqQu_WdBCT7v0o4X-Y"
departures <- "https://drive.google.com/open?id=1jbwk2rzuq86RVQs0_Jcr_34DLFgdun1ctKc6y5kj_9I"
rainfall <-"https://drive.google.com/open?id=1DZ8ZIdJnXWWxcpaqjETgvOyOP_dLxXt-V8bBqwTkWOg"
acled <- gsheet2text(incidents)
acled.long <- read.csv(text=acled)
rain <-gsheet2text(rainfall)
rain.long <- read.csv(text=rain,stringsAsFactors = FALSE)
rain.long$Date <-as.Date(rain.long$Date, format="%d.%m.%Y")
rain.long[,2:ncol(rain.long)] <- sapply(rain.long[,2:ncol(rain.long)], as.numeric)
shiny::runApp('UNHCR/App/MonthlyPredictions')
wt <- c(5,  5,  4,  1)/15
wt
x <- c(3.7,3.3,3.5,2.8)
xm <- weighted.mean(x,wt)
xm
xm <- mean(x)
cm
xm
wt<- rep(Na,6)
wt<- rep(NA,6)
wt
wt<- rep(1,6)
wt
wt<- rep(1:10,6)
wt
wt <- c(1,2,3)/3
wt
sum(2,3,na.rm=FALSE)
sum(2,3,NA,na.rm=FALSE)
shiny::runApp('UNHCR/App/MonthlyPredictions')
runApp('UNHCR/App/MonthlyPredictions')
runApp('UNHCR/App/MonthlyPredictions')
runApp('UNHCR/App/MonthlyPredictions')
runApp('UNHCR/App/MonthlyPredictions')
runApp('UNHCR/App/MonthlyPredictions')
shiny::runApp('UNHCR/App/MonthlyPredictions')
runApp('UNHCR/App/MonthlyPredictions')
runApp('UNHCR/App/MonthlyPredictions')
runApp('UNHCR/App/MonthlyPredictions')
runApp('UNHCR/App/MonthlyPredictions')
runApp('UNHCR/App/MonthlyPredictions')
runApp('UNHCR/App/MonthlyPredictions')
runApp('UNHCR/App/MonthlyPredictions')
setwd("~/UNHCR/App/MonthlyPredictions")
shiny::runApp()
if(NA < 0)
c<-1
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(datasets)
library(magrittr)
library(XML)
library(reshape)
library(gsheet)
library(ggplot2)
library(scales)
library(zoo)
jetson <- "https://docs.google.com/spreadsheets/d/1oPTPmoJ9phtMOkp-nMB7WHnPESomLzqUj9t0gcE9bYA"
conflicts <- gsheet2text(jetson, sheetid = 819472314)
conflicts.long <- read.csv(text=conflicts)
arrs <-gsheet2text(jetson, sheetid = 457614883)
arrs.long <- read.csv(text=arrs)
deps <-gsheet2text(jetson, sheetid = 677621454)
deps.long <-read.csv(text=deps)
rain <-gsheet2text(jetson, sheetid = 1473662223)
rain.long <- read.csv(text=rain,stringsAsFactors = FALSE)
water <-gsheet2text(jetson, sheetid =27261871)
water.long <- read.csv(text=water,stringsAsFactors = FALSE)
rivers <-gsheet2text(jetson, sheetid =407366559)
rivers.long <- read.csv(text=rivers,stringsAsFactors = FALSE)
goats <-gsheet2text(jetson, sheetid =1601716765)
goats.long <- read.csv(text=goats,stringsAsFactors = FALSE)
fatalities <-gsheet2text(jetson, sheetid =343810263)
fatalities.long <- read.csv(text=fatalities,stringsAsFactors = FALSE)
discharge <- gsheet2text(jetson, sheetid=407366559)
discharge <- read.csv(text=discharge,stringsAsFactors = FALSE)
Dates <- sapply(conflicts.long[,1],as.character.Date)
conflicts.long$Date <- as.Date(conflicts.long$Date, format="%m/%d/%Y")
arrs.long$Date <- as.Date(arrs.long$Date, format="%m/%d/%Y")
deps.long$Date <- as.Date(deps.long$Date, format="%m/%d/%Y")
rain.long$Date <-as.Date(rain.long$Date, format="%m/%d/%Y")
water.long$Date <-as.Date(water.long$Date, format="%m/%d/%Y")
rivers.long$Date <-as.Date(rivers.long$Date, format="%m/%d/%Y")
goats.long$Date <-as.Date(goats.long$Date, format="%m/%d/%Y")
fatalities.long$Date <-as.Date(fatalities.long$Date, format="%m/%d/%Y")
conflicts.long[,2:ncol(conflicts.long)] <- sapply(conflicts.long[,2:ncol(conflicts.long)], as.numeric)
arrs.long[,2:ncol(arrs.long)] <- sapply(arrs.long[,2:ncol(arrs.long)], as.numeric)
deps.long[,2:ncol(deps.long)] <- sapply(deps.long[,2:ncol(deps.long)], as.numeric)
rain.long[,2:ncol(rain.long)] <- sapply(rain.long[,2:ncol(rain.long)], as.numeric)
water.long[,2:ncol(water.long)] <- sapply(water.long[,2:ncol(water.long)], as.numeric,na.rm=TRUE)
rivers.long[,2:ncol(rivers.long)] <- sapply(rivers.long[,2:ncol(rivers.long)], as.numeric)
goats.long[,2:ncol(goats.long)] <- sapply(goats.long[,2:ncol(goats.long)], as.numeric)
fatalities.long[,2:ncol(fatalities.long)] <- sapply(fatalities.long[,2:ncol(fatalities.long)], as.numeric)
monthStart <- function(x) {
x <- as.POSIXlt(x)
x$mday <- 1
as.Date(x)
}
date_index <- function(x){
full.date <- as.POSIXct(x, tz="GMT")
index <- which(conflicts.long$Date== monthStart(full.date))
return(index)
}
PI <- PA <- PD <- rep(NA, len)
t<- 93
A <- deps.long[(t-13),"Galgaduud_Departures"]
B <- 2.26751515362942*deps.long[(t-12),"Bari_Departures"]
D <-  0.00588088839695529*arrs.long[(t-1),"Mudug_Arrival"]*arrs.long[(t-1),"Woqooyi_Galbeed_Arrival"]
CA<- median(rain.long[(t-4):(t-1),"Banaadir_rain"])
CB<- mean(arrs.long[(t-4):(t-1),"Sool_Arrival"])
if(is.na(CA) || CA > 0 ){
C <- CB
}
else{
C <- -5714
}
CA<- median(rain.long[(t-4):(t-1),"Banaadir_rain"])
CA<- median(rain.long[(t-4):(t-1),"Banaadir_rain"])
CB<- mean(arrs.long[(t-4):(t-1),"Sool_Arrival"])
if(is.na(CA) || CA > 0 ){
C <- CB
}
movavg()
install.packages("pracma")
library(pracma)
arrs.long[(t-4):(t-1),"Sool_Arrival"]
nrow(arrs.long[(t-4):(t-1),"Sool_Arrival"])
len(arrs.long[(t-4):(t-1),"Sool_Arrival"])
length(arrs.long[(t-4):(t-1),"Sool_Arrival"])
A <- deps.long[(t-13),"Galgaduud_Departures"]
B <- 2.26751515362942*deps.long[(t-12),"Bari_Departures"]
D <-  0.00588088839695529*arrs.long[(t-1),"Mudug_Arrival"]*arrs.long[(t-1),"Woqooyi_Galbeed_Arrival"]
CA<- median(rain.long[(t-4):(t-1),"Banaadir_rain"])
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],length(arrs.long[(t-4):(t-1),"Sool_Arrival"]),"s")
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],length(arrs.long[(t-4):(t-1),"Sool_Arrival"]),"m")
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],5,"m")
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],19,"m")
CB<- movavg(arrs.long[(t-5):(t-1),"Sool_Arrival"],length(arrs.long[(t-4):(t-1),"Sool_Arrival"]),"m")
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"Sool_Arrival"]),"m")
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"m")
CB <- mean(arrs.long[(t-4):(t-1),"Sool_Arrival"])
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"m")
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"m")[1]
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"m")[1]
if(is.na(CA) || CA > 0 ){
C <- CB
}
G <- 2.31702827594048*arrs.long[(t-1),"Sanaag_Arrival"]
H <- 5.97879951112646*deps.long[(t-3),"Bari_Departures"]
I <- deps.long[(t-4),"Sanaag_Departures"] * rain.long[(t-5),"Hiiraan_rain"]
E <- max(H, I, na.rm=TRUE)
I <- deps.long[(t-4),"Sanaag_Departures"] * rain.long[(t-5),"Hiiraan_rain"]
E <- max(H, I, na.rm=TRUE)
FIN <- max(386, max(A, max(sum(B ,D, C ,E, na.rm=TRUE), G),na.rm=TRUE),na.rm=TRUE)
t <- 92
t <- 92
A <- deps.long[(t-13),"Galgaduud_Departures"]
B <- 2.26751515362942*deps.long[(t-12),"Bari_Departures"]
D <-  0.00588088839695529*arrs.long[(t-1),"Mudug_Arrival"]*arrs.long[(t-1),"Woqooyi_Galbeed_Arrival"]
CA<- median(rain.long[(t-4):(t-1),"Banaadir_rain"])
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"m")[1]
if(is.na(CA) || CA > 0 ){
C <- CB
}
else{
C <- -5714
}
G <- 2.31702827594048*arrs.long[(t-1),"Sanaag_Arrival"]
H <- 5.97879951112646*deps.long[(t-3),"Bari_Departures"]
I <- deps.long[(t-4),"Sanaag_Departures"] * rain.long[(t-5),"Hiiraan_rain"]
E <- max(H, I, na.rm=TRUE)
FIN <- max(386, max(A, max(sum(B ,D, C ,E, na.rm=TRUE), G),na.rm=TRUE),na.rm=TRUE)
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"m")[1]
CB <- mean(arrs.long[(t-4):(t-1),"Sool_Arrival"])
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"m")[1]
if(is.na(CA) || CA > 0 ){
C <- CB
}
G <- 2.31702827594048*arrs.long[(t-1),"Sanaag_Arrival"]
H <- 5.97879951112646*deps.long[(t-3),"Bari_Departures"]
I <- deps.long[(t-4),"Sanaag_Departures"] * rain.long[(t-5),"Hiiraan_rain"]
E <- max(H, I, na.rm=TRUE)
FIN <- max(386, max(A, max(sum(B ,D, C ,E, na.rm=TRUE), G),na.rm=TRUE),na.rm=TRUE)
CB <- mean(arrs.long[(t-4):(t-1),"Sool_Arrival"])
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"m")[1]
CB <- mean(arrs.long[(t-4):(t-1),"Sool_Arrival"])
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"m")[1]
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"m"
if(is.na(CA) || CA > 0 ){
C <- CB
}
else{
C <- -5714
}
G <- 2.31702827594048*arrs.long[(t-1),"Sanaag_Arrival"]
H <- 5.97879951112646*deps.long[(t-3),"Bari_Departures"]
I <- deps.long[(t-4),"Sanaag_Departures"] * rain.long[(t-5),"Hiiraan_rain"]
E <- max(H, I, na.rm=TRUE)
FIN <- max(386, max(A, max(sum(B ,D, C ,E, na.rm=TRUE), G),na.rm=TRUE),na.rm=TRUE)
PA[t] <- FIN
#Bay_Incidents
PI[t] <- 0
#Bay_Departures
PD[t] <- 0
}
return(PA)
}
bay_12B_arrivals <- function(start,end){
start = 15
end=93
len=93
PI <- PA <- PD <- rep(NA, len)
for(t in start:end){
A <- deps.long[(t-13),"Galgaduud_Departures"]
B <- 2.27391080050669*deps.long[(t-12),"Bari_Departures"]
C <- 0.00588055939993242*arrs.long[(t-1),"Mudug_Arrival"]*arrs.long[(t-1),"Woqooyi_Galbeed_Arrival"]
D <- mean(rain.long[(t-4):(t-1),"Banaadir_rain"])
E <- median(arrs.long[(t-4):(t-1),"Sool_Arrival"])
G <- 5.95887287478984*deps.long[(t-3),"Bari_Departures"]
H <- deps.long[(t-4),"Sanaag_Departures"]*rain.long[(t-5),"Hiiraan_rain"]
K <- 2.29816996652923*arrs.long[(t-1),"Sanaag_Arrival"]
X <- sum(311.894138182276,K,na.rm=TRUE)
if(is.na(D) || D >0 )
{
Q <- E
}
else{Q <- -5716}
Y <- sum(B, C, Q, max(G, H, na.rm=TRUE),na.rm =TRUE)
W <- max(Y, X,na.rm=TRUE)
FIN <- max(A, W,na.rm=TRUE)
PA[t] <- FIN
#Bay_Incidents
PI[t] <- 0
#Bay_Departures
PD[t] <- 0
}
return(PA)
}
bay_12C_arrivals <- function(start,end){
start = 15
end=93
len=93
PI <- PA <- PD <- rep(NA, len)
for(t in start:end){
A <- 7.09622785331628*deps.long[(t-3),"Bari_Departures"]
B <- 2.43787508914871*deps.long[(t-12),"Bari_Departures"]
C <- 0.00601323333840485*arrs.long[(t-1),"Mudug_Arrival"]*arrs.long[(t-1),"Woqooyi_Galbeed_Arrival"]
D <- deps.long[(t-4),"Sanaag_Departures"]*rain.long[(t-5),"Hiiraan_rain"]
E <- deps.long[(t-13),"Galgaduud_Departures"]
G <- median(rain.long[(t-4):(t-1),"Banaadir_rain"])
H <- 5.95351409100946*deps.long[(t-4),"Bari_Departures"]
X <- 2.46409172818795*arrs.long[(t-1),"Sanaag_Arrival"]
if (is.na(G) || G>0)
{Y<- H}
else
{ Y <- -3205.61372701243}
FIN <- max(A, 0.93871317992841*max(sum(B , C , D , E , Y , na.rm=TRUE), X, na.rm=TRUE),na.rm=TRUE)
PA[t] <- FIN
#Bay_Incidents
PI[t] <- 0
#Bay_Departures
PD[t] <- 0
}
return(PA)
}
bay_12D_arrivals <- function(start,end){
start = 15
end=93
len=93
PI <- PA <- PD <- rep(NA, len)
for(t in start:end){
X <- mean(rain.long[(t-7):(t-1),"Banaadir_rain"])
Y <- deps.long[(t-4),"Bari_Departures"]*median(rain.long[(t-6):(t-1),"Hiiraan_rain"])
if(is.na(X) || X > 0){A<- Y}
else{A<- -2915}
B <- 2.98981569846976*deps.long[(t-12),"Bari_Departures"]
C <- 1.90068199745955*deps.long[(t-14),"Bari_Departures"]
D <- 0.005464125090538*arrs.long[(t-1),"Mudug_Arrival"]*arrs.long[(t-1),"Woqooyi_Galbeed_Arrival"]
E <- 7.08510220750896*deps.long[(t-3),"Bari_Departures"]
Z <- deps.long[(t-13),"Galgaduud_Departures"]
T <- 2.31719227653268*arrs.long[(t-1),"Sanaag_Arrival"]
FIN <- max(sum(A,max(sum(B,C,D,na.rm=TRUE), sum(E,Z,na.rm=TRUE),na.rm=TRUE),na.rm=TRUE), T,na.rm=TRUE)
PA[t] <- FIN
#Bay_Incidents
PI[t] <- 0
#Bay_Departures
PD[t] <- 0
}
return(PA)
}
bay_12E_arrivals <- function(start,end){
start = 15
end=93
len=93
PI <- PA <- PD <- rep(NA, len)
for(t in start:end){
X <- mean(rain.long[(t-7):(t-1),"Banaadir_rain"])
Y <- deps.long[(t-4),"Bari_Departures"]*median(rain.long[(t-6):(t-1),"Hiiraan_rain"])
if(is.na(X) || X>0){A<- Y}
else{A<- -2908}
B <- 3*deps.long[(t-12),"Bari_Departures"]
C <- 0.005464125090538*arrs.long[(t-1),"Mudug_Arrival"]*arrs.long[(t-1),"Woqooyi_Galbeed_Arrival"]
D <- deps.long[(t-14),"Bari_Departures"]
E <- 7.08538265288562*deps.long[(t-3),"Bari_Departures"]
G <- deps.long[(t-13),"Galgaduud_Departures"]
H <- 2.31173952956057*arrs.long[(t-1),"Sanaag_Arrival"]
FIN <- max(sum(A,max(sum(B, C, D, na.rm=TRUE), sum(E, G,na.rm=TRUE)),na.rm=TRUE), H, na.rm=TRUE)
PA[t] <- FIN
#Bay_Incidents
PI[t] <- 0
#Bay_Departures
PD[t] <- 0
}
return(PA)
}
bay_12F_arrivals <- function(start,end){
start = 15
end=93
len=93
PI <- PA <- PD <- rep(NA, len)
for(t in start:end){
X <- mean(rain.long[(t-7):(t-1),"Banaadir_rain"])
Y <- 6.01020527817426*deps.long[(t-4),"Bari_Departures"]
if(is.na(X)|| X >0 ){A <- Y}
else {A<- -2883}
B <- 3*deps.long[(t-12),"Bari_Departures"]
C <- 0.005464125090538*arrs.long[(t-1),"Mudug_Arrival"]*arrs.long[(t-1),"Woqooyi_Galbeed_Arrival"]
D <- 1.79377455952668*deps.long[(t-14),"Bari_Departures"]
E <- 7.08538265288562*deps.long[(t-3),"Bari_Departures"]
G <- deps.long[(t-13),"Galgaduud_Departures"]
H <- 2.31173952956057*arrs.long[(t-1),"Sanaag_Arrival"]
FIN <-  max(sum(A, max(sum(B, D, C, na.rm=TRUE), sum(E, G,na.rm=TRUE), na.rm=TRUE),na.rm=TRUE), H,na.rm=TRUE)
PA[t] <- FIN
#Bay_Incidents
PI[t] <- 0
#Bay_Departures
PD[t] <- 0
}
return(PA)
}
# Define a server for the Shiny app
# the ids refer to the google sheet refering to the special identifier
shinyServer(function(input, output, session) {
pred_data <- reactive({
#testing
region <- input$region
fmonths_start <- which(conflicts.long$Date == monthStart(as.Date("2011-07-01")))
fmonths_end <- which(conflicts.long$Date == monthStart(as.Date("2017-09-01")))
# prepare columns for the merged graph
reg_con <- paste(region,"Conflict",sep="_")
reg_arr <- paste(region,"Arrival",sep="_")
reg_dep <- paste(region,"Departures",sep="_")
reg_rain <- paste(region,"rain",sep="_")
I <- conflicts.long[ fmonths_start:fmonths_end,reg_con]
A <- arrs.long[ fmonths_start:fmonths_end, reg_arr ]
D <- deps.long[ fmonths_start:fmonths_end, reg_dep ]
#AA <- A[(total_len-30):total_len]
R <- rain.long[ fmonths_start:fmonths_end, reg_rain]
len <- fmonths_end - fmonths_start+1
PI <- PA <- PD <- rep(NA, len)
if(region == "Bay"){
PA <- bay_12F_arrivals(fmonths_start, fmonths_end)
PI <- PA[fmonths_start:fmonths_end]
}
else{
PA <- rep(NA, len)
PI <- rep(NA, len)
}
A<- A[1:len]
Date <- conflicts.long$Date[fmonths_start:fmonths_end]
long <- data.frame(
Period=rep((1:len),2),
Date=Date,
Population = c(A, PI),
Indicator=rep(c("Actual Arrivals",
"Model Arrivals"),
each=len))
Actual_Arrivals <- A
Model_Arrivals <- PI
Date <- Date
wide <- cbind(Date = format(Date,"%Y %b"),
Actual_Arrivals = as.integer(Actual_Arrivals),
Model_Arrivals =as.integer(Model_Arrivals))
list(long=long, wide=wide)
})
#Create a datatable with all the values from the inputs
output$datatable <- renderTable({
Tdata <- cbind(pred_data()[["wide"]])
Tdata <- cbind(Tdata)
Tdata[seq((nrow(Tdata)-12), nrow(Tdata), length.out=13),]
})
}
)
CB<- movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"m")
CB <- mean(arrs.long[(t-4):(t-1),"Sool_Arrival"])
CB<- mean(movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"m"))
CB <- mean(arrs.long[(t-4):(t-1),"Sool_Arrival"])
CB<- mean(movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"m"))
CB <- mean(arrs.long[(t-4):(t-1),"Sool_Arrival"])
CB<- mean(movavg(arrs.long[(t-4):(t-1),"Sool_Arrival"],3,"m"))
